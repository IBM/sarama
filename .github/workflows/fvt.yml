name: FVT
on:
  workflow_call:
    inputs:
      go-version:
        required: false
        type: string
        default: stable
      kafka-version:
        required: false
        type: string
        default: 3.6.2
      scala-version:
        required: false
        type: string
        default: 2.13

concurrency:
  group: ${{ github.workflow }}-kafka-${{ inputs.kafka-version}}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

permissions:
  contents: read  # for actions/checkout to fetch code

env:
  # Use the Go toolchain installed by setup-go
  GOTOOLCHAIN: local

jobs:
  fvt:
    name: Test with Kafka ${{ inputs.kafka-version }}
    runs-on: ubuntu-latest
    env:
      DEBUG: true
      GOFLAGS: -trimpath
      KAFKA_VERSION: ${{ inputs.kafka-version }}
      SCALA_VERSION: ${{ inputs.scala-version }}
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        persist-credentials: false
    - name: Setup Docker
      uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5 # v3.8.0
      id: buildx
    - name: Build FVT Docker Image
      uses: docker/bake-action@4f08b22a19b3133912e9acbf7da9bfa25184a173 # v6.4.0
      with:
        builder: ${{ steps.buildx.outputs.name }}
        files: docker-compose.yml
        load: true
        targets: kafka-1
        set: |
          *.cache-from=type=gha,scope=fvt-kafka-${{ inputs.kafka-version }}
          *.cache-to=type=gha,scope=fvt-kafka-${{ inputs.kafka-version }},mode=max
    - name: Setup Go
      uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
      with:
        go-version: ${{ inputs.go-version }}
    - name: Setup Docker Compose
      run: |
        curl --fail -sSL "https://github.com/docker/compose/releases/download/v2.32.1/docker-compose-$(uname -s)-$(uname -m)" -o /tmp/docker-compose
        mkdir -p $HOME/.docker/cli-plugins
        install -m755 /tmp/docker-compose $HOME/.docker/cli-plugins
        docker version --format 'Docker Engine version v{{.Server.Version}}'
        docker compose version
    - name: Test (Functional)
      run: |
        nohup sudo tcpdump -i lo -w "fvt-kafka-${KAFKA_VERSION}.pcap" portrange 29091-29095 >/dev/null 2>&1 &
        echo $! >tcpdump.pid
        make test_functional
        echo "## Code Coverage" >>$GITHUB_STEP_SUMMARY
        echo "|Filename|Function|Coverage|" >>$GITHUB_STEP_SUMMARY
        echo "|--------|--------|--------|" >>$GITHUB_STEP_SUMMARY
        go tool cover -func=profile.out | sed -E -e 's/[[:space:]]+/|/g' -e 's/$/|/g' -e 's/^/|/g' >>$GITHUB_STEP_SUMMARY
    - name: Stop tcpdump
      if: always()
      run: |
        if [ -f "tcpdump.pid" ]; then sudo kill "$(cat tcpdump.pid)" || true; fi
        if [ -f "fvt-kafka-${KAFKA_VERSION}.pcap" ]; then sudo chmod a+r "fvt-kafka-${KAFKA_VERSION}.pcap"; fi
    - name: Upload pcap file
      if: always()
      uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
      with:
        name: fvt-kafka-${{ inputs.kafka-version }}.pcap
        path: fvt-kafka-${{ inputs.kafka-version }}.pcap
        retention-days: 5
        if-no-files-found: ignore
