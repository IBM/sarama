name: FVT
on:
  workflow_call:
    inputs:
      go-version:
        required: false
        type: string
        default: 1.23.x
      kafka-version:
        required: false
        type: string
        default: 3.6.2
      scala-version:
        required: false
        type: string
        default: 2.13

permissions:
  contents: read  # for actions/checkout to fetch code

jobs:
  fvt:
    name: Test with Kafka ${{ inputs.kafka-version }}
    runs-on: ubuntu-latest
    env:
      DEBUG: true
      GOFLAGS: -trimpath
      KAFKA_VERSION: ${{ inputs.kafka-version }}
      SCALA_VERSION: ${{ inputs.scala-version }}
    steps:
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      with:
        persist-credentials: false
    - name: Setup Docker
      uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1
      id: buildx
    - name: Build FVT Docker Image
      uses: docker/bake-action@33a1cc61dab930ceab0181de8cdc34a8cc55e61d # master
      with:
        builder: ${{ steps.buildx.outputs.name }}
        files: docker-compose.yml
        load: true
        targets: kafka-1
        set: |
          *.cache-from=type=gha,scope=${{ github.workflow }}
          *.cache-to=type=gha,scope=${{ github.workflow }},mode=max
    - name: Setup Go
      uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
      with:
        go-version: ${{ inputs.go-version }}
    - name: Setup Docker Compose
      run: |
        curl --fail -sSL "https://github.com/docker/compose/releases/download/v2.29.1/docker-compose-$(uname -s)-$(uname -m)" -o /tmp/docker-compose
        sudo install -m755 /tmp/docker-compose "$(dirname $(which docker))"
        docker version --format 'Docker Engine version v{{.Server.Version}}'
        docker-compose version
    - name: Test (Functional)
      run: |
        nohup sudo tcpdump -i lo -w "fvt-kafka-${{ inputs.kafka-version }}.pcap" portrange 29091-29095 >/dev/null 2>&1 &
        echo $! >tcpdump.pid
        make test_functional
    - name: Stop tcpdump
      if: always()
      run: |
        if [ -f "tcpdump.pid" ]; then sudo kill "$(cat tcpdump.pid)" || true; fi
        if [ -f "fvt-kafka-${{ inputs.kafka-version }}.pcap" ]; then sudo chmod a+r "fvt-kafka-${{ inputs.kafka-version }}.pcap"; fi
    - name: Upload pcap file
      if: always()
      uses: actions/upload-artifact@834a144ee995460fba8ed112a2fc961b36a5ec5a # v4.3.6
      with:
        name: fvt-kafka-${{ inputs.kafka-version }}.pcap
        path: fvt-kafka-${{ inputs.kafka-version }}.pcap
        retention-days: 5
        if-no-files-found: ignore
