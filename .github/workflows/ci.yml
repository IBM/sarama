name: CI
on:
  merge_group:
  push:
    branches:
    - main
    paths-ignore:
    - '**/*.md'
  pull_request:
    branches:
    - "**"
    paths-ignore:
    - '**/*.md'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

permissions:
  contents: read # for actions/checkout to fetch code

env:
  # Use the Go toolchain installed by setup-go
  GOTOOLCHAIN: local

jobs:
  lint:
    permissions:
      contents: read # for actions/checkout to fetch code
      pull-requests: read # for golangci/golangci-lint-action to fetch pull requests
    name: Linting with Go ${{ matrix.go-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        go-version: [stable]
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        persist-credentials: false
    - name: Setup Go
      uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
      with:
        go-version: ${{ matrix.go-version }}
    - name: Staticcheck
      shell: bash
      env:
        BUILDTAGS: "functional"
        VERSION: "v0.6.0"
      run: |
        go install "honnef.co/go/tools/cmd/staticcheck@${VERSION}"
        echo "::add-matcher::./.github/actions/staticcheck-matchers.json"
        $(go env GOPATH)/bin/staticcheck -tags "${BUILDTAGS}" ./...
    - name: golangci-lint
      env:
        GOFLAGS: -tags=functional
      uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8.0.0
      with:
        version: v2.4.0
  test:
    name: Unit Testing with Go ${{ matrix.go-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        go-version: [oldstable, stable]
    env:
      DEBUG: true
      GOFLAGS: -trimpath
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        persist-credentials: false
    - name: Setup Go
      uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
      with:
        go-version: ${{ matrix.go-version }}
    - name: Test (Unit)
      run: make test
    - name: Report Test Results
      if: always()
      run: |
        # renovate: datasource=github-releases depName=mfridman/tparse
        go run github.com/mfridman/tparse@v0.18.0 -all -format markdown -file _test/unittests.json | tee -a $GITHUB_STEP_SUMMARY
    - name: Report Per Func Test Coverage
      if: always()
      run: |
        cat >>$GITHUB_STEP_SUMMARY <<EOF
        <details>
        <summary>Click for per-func code coverage</summary>

        |Filename|Function|Coverage|
        |--------|--------|--------|
        $(go tool cover -func=profile.out | sed -E -e 's/[[:space:]]+/|/g' -e 's/$/|/g' -e 's/^/|/g')
        </details>
        EOF
